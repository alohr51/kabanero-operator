// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// assets statically implements the virtual filesystem provided to vfsgen.
var assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 9, 27, 18, 6, 19, 449100838, time.UTC),
		},
		"/orchestrations": &vfsgen۰DirInfo{
			name:    "orchestrations",
			modTime: time.Date(2019, 9, 30, 17, 9, 1, 535493650, time.UTC),
		},
		"/orchestrations/appsody-operator": &vfsgen۰DirInfo{
			name:    "appsody-operator",
			modTime: time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
		},
		"/orchestrations/appsody-operator/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
		},
		"/orchestrations/appsody-operator/0.1/appsody.yaml": &vfsgen۰CompressedFileInfo{
			name:             "appsody.yaml",
			modTime:          time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
			uncompressedSize: 7504,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x8f\xdb\xb8\x11\x7f\xf7\xa7\x18\xa4\x0f\xdb\x16\xb5\x16\x69\x70\x87\xc2\xc0\xa1\x75\x9d\x5c\x9b\xde\x25\x6b\xd8\x9b\x2b\x8a\xa2\x38\x8c\xa9\xb1\xcd\x2e\x45\xaa\xe4\xd0\x17\x27\xc8\x77\x2f\x48\x4a\x96\x65\x49\xfe\x93\x4b\xf8\x64\x93\x9c\x99\x1f\xe7\x1f\x87\x23\x2c\xe5\x4f\x64\x9d\x34\x7a\x02\x58\x4a\x7a\xcf\xa4\xc3\x3f\x97\x3d\xfd\xc9\x65\xd2\xdc\xef\x9e\xaf\x88\xf1\xf9\xe8\x49\xea\x7c\x02\x33\xef\xd8\x14\x0b\x72\xc6\x5b\x41\x2f\x69\x2d\xb5\x64\x69\xf4\xa8\x20\xc6\x1c\x19\x27\x23\x00\x8d\x05\x05\x6e\xa5\x33\xf9\x1e\xcb\x52\x49\x81\x1c\x79\x56\x73\x59\x4e\xbb\x91\x2b\x49\x84\xdd\x98\xe7\x91\x05\xaa\xb9\x95\x9a\xc9\xce\x8c\xf2\x85\x76\x61\x6d\x0c\xff\x58\x3e\xbc\x9d\x23\x6f\x27\x90\x05\x82\xec\x88\xdd\xeb\x02\x37\x34\x02\x00\xc8\xc9\x09\x2b\x4b\x8e\xa7\x98\xae\x9c\x51\x9e\x29\xc2\x00\xb3\x06\xde\x12\xe4\x54\x2a\xb3\xa7\x1c\x64\x20\x02\x61\x34\xa3\xd4\x52\x6f\xc0\xd2\x46\x3a\xb6\x7b\x40\x9d\x03\xe3\x26\x32\x4c\x27\x68\x04\xf0\xbe\xa4\x09\x38\xb6\x52\x6f\x7a\x61\xd1\xfb\xd2\xb8\x1e\x30\xcb\x92\x84\x5c\x4b\x72\xf0\xcb\x96\x78\x4b\xb6\x42\x52\x90\x66\x90\x0e\x12\x5d\x0e\x41\xef\x56\xa3\x52\x7b\xd8\x49\x84\x9c\xd6\xe8\x15\xc3\xc2\x78\xa6\x23\x44\xaf\xd2\xf6\x23\x4c\x2b\x63\x14\xa1\xee\x80\x62\x64\xef\x32\x61\x74\x52\xae\xfb\xf7\x9f\x7f\xfb\x97\x2c\x90\x7c\xf7\xdd\xdd\x82\x84\xd1\x42\x2a\xca\xef\x7e\xf7\x9f\x6a\x6b\x0f\xf4\x38\x5f\x2b\xd0\xd6\x34\x70\xe0\x79\x84\xab\xe1\x78\x59\x5d\xd7\x23\xb3\x84\xae\x12\xd3\x42\xb6\x88\xf3\xb0\x36\x36\x42\x5b\xa3\x54\xde\x46\x53\x5f\x42\x79\xe0\x57\x5a\x69\xac\xe4\xfd\x04\x9e\x7f\x49\xc4\x05\x39\xd7\xeb\x94\xdf\x57\x18\xab\x0d\xb0\xb6\xa6\xb8\x80\xf6\xcd\x11\xaf\x5b\xe0\xd6\x91\x98\x09\x4b\x31\x4e\x1e\x65\x41\x8e\xb1\x28\x7b\x62\x65\x43\x8d\x81\x53\x4c\x1f\x21\x98\xb6\xbc\x3f\xc7\xe8\x8a\x1b\x6b\x7c\x79\x88\xee\x18\xc9\x69\x7f\x0c\x58\x80\x94\x27\xa6\x69\x79\xda\x44\x6b\x5c\x54\xd2\xf1\x0f\x03\x1b\x7e\x94\x8e\xd3\x61\x95\xb7\xa8\x7a\x13\x48\x5c\x77\x52\x6f\xbc\x42\xdb\xb7\x63\x04\xe0\x84\x09\x70\xdf\x06\x48\x25\x8a\xe8\x92\xce\xaf\xea\xf3\x55\x30\x93\x51\x27\xf0\xf1\xd3\x08\x60\x87\x4a\xe6\x91\x3e\x2d\x9a\x92\xf4\x74\xfe\xfa\xa7\x17\x4b\xb1\xa5\x02\xd3\x64\xb0\x82\x29\xc9\xb2\xac\x79\x84\x71\x94\x3f\x0f\x73\x27\x4a\xbe\x0b\xac\xd2\x9e\x10\xd8\x52\x93\x8b\x1a\xdf\xa5\x39\xca\xc1\x45\x31\xc9\x12\xd2\x81\xa5\xd2\x92\x23\xcd\x8d\xe2\xea\x61\xd6\x80\x1a\xcc\xea\xbf\x24\x38\x83\x25\xd9\xc0\x04\xdc\xd6\x78\x95\x07\x2f\xda\x91\xe5\xe8\x57\x1b\x2d\x3f\x1c\x38\x3b\x60\x13\x45\x2a\x64\xaa\xb4\x5c\x8f\x98\x72\x35\xaa\xa0\x04\x4f\x7f\x88\x69\xb0\xc0\x3d\x58\x0a\x32\xc0\xeb\x23\x6e\x71\x8b\xcb\xe0\x8d\xb1\x04\x52\xaf\xcd\x04\xb6\xcc\xa5\x9b\xdc\xdf\x6f\x24\xd7\x37\x86\x30\x45\xe1\xb5\xe4\xfd\x7d\x48\xb3\x56\xae\x3c\x1b\xeb\xee\x73\xda\x91\xba\xc7\x52\x8e\x23\x4e\x9d\x6e\x84\x22\xff\xcd\xc1\x32\x77\x47\xc0\x4e\x3c\x3c\x8d\xe8\x5b\x83\x6a\x0e\x8e\x15\x72\x2a\x56\x64\x09\x6e\xa3\xcd\x30\x15\x94\xb0\x78\xb5\x7c\x3c\xb8\x7b\xd4\x78\x5b\xc5\x51\xb9\x0d\x99\x6b\xf4\x1c\xf4\x22\xf5\x9a\x6c\xb2\x53\x0c\xe2\xc0\x91\x74\x5e\x1a\xa9\x39\xfe\x11\x4a\x92\x6e\xeb\xd8\xf9\x55\x21\x39\x18\xf6\x7f\x9e\x1c\x07\x73\x64\x30\x43\xad\x0d\xc3\x8a\xc0\x97\x21\xb6\xf2\x0c\x5e\x6b\x98\x61\x41\x6a\x86\x8e\xbe\xb4\x96\x83\x42\xdd\x38\x68\xf0\xb2\x9e\x8f\x2f\xf3\xf6\xc6\xa4\x9c\xc3\x74\x7d\x87\xd7\xa3\x2f\x42\x52\x94\xb4\x6f\xed\xf6\xea\x00\x8a\x48\x68\xc5\x56\x32\x09\xf6\xb6\x43\x24\x99\x0a\x77\x3a\x79\x86\x57\xbd\x84\xd6\xe2\xbe\x2d\xc5\xb3\x71\x02\x95\xd4\x9b\x53\x7e\x43\x27\x8a\x6a\xc2\xf7\x0b\x8a\x07\xeb\x59\x84\x70\x3f\x15\xc8\x93\x10\x61\x2f\xfe\xd8\xb3\x5e\x48\x2d\x0b\x5f\xd4\x39\xbd\x0f\x6a\x08\xce\x0d\xd9\xae\x64\xa9\x7f\x8d\xe4\xf3\xcc\x19\xed\x86\x78\x36\x7f\xf7\x8e\xa5\x92\x1f\xa2\xd5\xe6\x64\x45\x48\x48\x5d\xd3\xfd\x5a\x79\xbd\x7e\x15\x46\xbc\xbe\xe8\x07\x8d\x2c\x77\x14\x22\x50\x8a\x01\xbf\x69\x6a\xa0\x66\x90\xde\xdd\xe4\x2f\x3d\x00\x86\xfd\x85\xf4\xee\x7b\x6b\x8a\xaf\x28\x20\xd6\x79\xd7\x9f\x56\xc9\x1d\x69\x72\x6e\x6e\xcd\x6a\x80\xac\x47\x7e\xe9\x95\x9a\x1b\x25\xc5\xfe\xea\x78\x0c\x24\x4b\x12\x96\xf8\x6a\x12\x4b\x98\xcb\xdb\xc1\xd9\x01\xff\x3e\xe7\x6b\xc3\x7e\x56\xa7\xfb\x99\xd1\x8e\x2d\x4a\xcd\x1d\xc6\x83\x48\x5c\xbf\xef\x9d\xcb\x0c\x31\xb5\xa7\x92\xa5\x2f\x5e\x8e\x9f\x3c\xc3\x4c\xe0\x7c\x32\x3b\x8b\x39\x02\x34\xb6\x63\x25\xb8\x26\x2f\xe1\xfb\x94\x97\xbe\xfd\xe6\x9b\x17\xdf\x7e\xd9\xc4\x15\x57\x07\xa9\xce\x24\xed\x61\xbb\x4c\x85\x30\x5e\x73\xa8\xf7\xae\xf6\x49\xc7\x28\x9e\x6e\xd8\x6d\x6c\x4f\xe6\x3b\x7b\x35\x04\x48\xb1\x20\xbf\xed\xb0\xa1\xba\xfd\x70\xab\x86\x00\x76\xe1\xc9\x4c\x33\x85\xb2\x78\xa4\xa2\x0c\x65\xde\x30\x8f\x33\x99\xa8\x67\x29\xb1\x7e\x13\xce\xd3\x39\xe7\x97\x4b\x78\x49\xca\x57\x13\x10\x0a\x2f\x69\xa9\x55\x3c\x8e\x3b\x55\x49\x6b\x31\xba\xc8\xc5\xfa\x27\xbd\x22\xae\xa8\x80\x9a\xd7\xe3\x95\x67\x3c\xe7\x5d\x00\x0a\x1d\x3f\x5a\xd4\x4e\xd6\x2f\xbc\xfe\xfc\x51\xc7\x7a\x28\x30\xc7\x2c\x0b\xfa\x9c\x2c\x13\x84\xbd\x8b\x35\xea\x57\x16\x54\xbd\x8e\x3f\x2b\x15\xa6\x66\xc1\x67\x91\x76\xad\x78\x35\xe9\x50\x3e\xbb\x40\x78\xb3\x03\x9f\x10\xec\xea\x96\x5d\xdd\x9d\x3b\x4c\x55\x6d\xb3\xf4\x80\x6f\x56\x53\xb6\xa4\x7c\x02\x6c\x3d\x55\x2f\xe0\x94\xd5\xd2\xcc\x78\x3c\x1e\x1d\xf7\x02\x77\x75\xc7\x6f\xd9\xca\xb2\xc3\x7d\xbe\x71\x70\x57\x64\x63\x3b\xac\xec\x0a\x45\x86\x9e\xb7\xc6\x56\xd5\x64\xd3\x5b\xac\xdb\x8a\xca\x3b\x26\xbb\x30\x8a\x5a\x12\x3a\x2d\x8c\x09\x68\xaf\xd4\xb0\x6c\xeb\x55\x08\x98\x10\xdb\xf2\x6f\xd6\xf8\xb2\xd2\xc7\xb3\x67\xa3\xa6\x08\xa8\xe6\x4a\x93\xbb\xf8\xa3\xba\x48\xd2\x9f\xfa\x2d\x97\xfe\x95\xe1\x10\x8e\x49\x73\xca\x50\x22\xa4\xd8\x6a\x63\x78\x5d\xa5\x9f\xc2\xe8\xb5\xdc\x14\x58\xd6\xfc\x42\x81\xd4\xe2\x8d\x49\x7d\x2e\x19\x6a\x55\x21\xb8\xfb\xfd\x5d\x17\x6a\x38\x53\x17\x6c\xd3\x36\x4c\x7c\x73\xa4\xc2\x68\x57\x8b\xa9\xab\xa5\x83\x58\x46\xa6\xb5\x57\xd5\xc4\x45\x99\xcd\x03\xa8\x2b\x3a\xda\xcd\x68\x46\x55\x9a\xbc\xde\x49\xf6\x1a\xbe\x85\xd1\x92\x4d\x08\x81\x4c\x18\x4b\xc6\x65\xc2\x14\x5d\x09\x95\x92\xaa\xdd\x27\x8c\x37\xc4\x49\xc9\xf1\x3d\x70\x51\x5f\x6f\xeb\x56\xd4\xb8\xeb\x1d\xe7\xb4\x7a\xbf\x96\x1a\x95\xfc\xd0\x39\x58\x7a\x9d\xf7\xcb\x6d\x3a\x60\x27\x8c\x83\x36\x2e\xab\xc7\x1a\xcf\x94\x99\x92\xb4\xdb\xca\x35\x67\xd2\x8c\x00\x90\xd3\x6b\x9e\x16\x14\xb2\x87\x48\x97\x46\xed\xf7\x27\x72\x22\x87\x6b\x2c\x11\x55\xac\x37\xd9\x53\x7a\x4f\x55\xa8\x6f\x92\x75\x14\x26\x97\xa4\x3d\xe1\x0a\x35\x59\x93\x4e\x74\xc2\xa7\x5e\xec\xb1\xf3\x67\x32\xba\x68\xbb\xf1\xb8\x9b\x68\xfe\x2a\x75\x1e\xfc\xfd\xea\x54\x75\x45\xea\x73\x3e\x66\xe8\x98\x81\x7a\xd3\xe7\x20\x65\xd5\x43\x2d\x51\xd0\x04\xa6\xf3\xf9\xf2\xe1\xe5\xbf\x7e\x7e\x98\xbf\x5a\x4c\x1f\x1f\x16\x3f\xbf\x9d\xbe\x79\xb5\x9c\x4f\x67\xaf\x60\x64\x8d\xa2\x05\xad\x03\x88\x6e\xee\x3c\xc3\xbe\x56\xec\x99\x43\x06\x3d\x01\x8c\xda\x9f\x84\x4a\xd7\xa4\xe9\x97\x87\x70\xb9\x4a\x19\x55\x73\xe8\xf0\x92\x8b\xef\x05\x47\x8a\x04\x1b\x9b\x6e\xcd\x02\x59\x6c\x7f\xc4\x15\xa9\xc3\xfd\x3b\x78\x02\x6e\x55\xb6\xa7\x3d\x2a\xd5\x62\x72\x86\x4d\xbb\x6b\xd5\xf3\x88\xe8\x27\x82\xfa\xa3\x11\xd9\x23\x29\xe3\x73\x72\xd2\x88\x5f\x9c\x26\xf0\xf1\x23\x64\xe9\xe3\xd3\xa7\x4f\x47\xab\xc2\x14\x05\xea\x6e\x61\x7a\x96\xdb\xbc\x79\xb8\xc3\x54\xfd\x82\xfb\xe3\x0e\x66\xa7\xf3\x51\x63\xfc\xe7\xf4\x71\xf6\xf7\xc6\x95\x4e\xea\x8e\xd8\x2c\x8d\x5d\x8d\x6e\x2d\x13\x47\xa7\x88\x59\x4b\x52\x79\x70\xc5\x2b\xf7\x57\x14\xe9\x33\xc5\xe1\x2b\xc5\xc1\xed\x7b\x31\xcf\x1f\x5e\x46\xc4\x83\x60\x87\x51\xdd\x20\xbf\x57\x74\x2b\xf8\xfa\xe4\x4f\xe0\xd9\xa9\xa1\x9e\x8d\xfe\x1f\x00\x00\xff\xff\xce\xec\xc0\x0c\x50\x1d\x00\x00"),
		},
		"/orchestrations/cli-services": &vfsgen۰DirInfo{
			name:    "cli-services",
			modTime: time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
		},
		"/orchestrations/cli-services/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
		},
		"/orchestrations/cli-services/0.1/kabanero-cli.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kabanero-cli.yaml",
			modTime:          time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
			uncompressedSize: 1286,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xcd\x8e\xd3\x40\x0c\xc7\xef\x79\x0a\x6b\x2f\x2b\x21\x25\x2b\xc4\x1e\x20\x37\xe0\xc0\x0d\xad\x96\x15\x77\x77\xe2\xa6\xa6\x93\xf1\xc8\xe3\x29\x62\x9f\x1e\xcd\xb4\x85\x6d\x9a\xb2\x95\x38\x25\xe3\x8f\xbf\x7f\xb6\x6c\x8c\xfc\x9d\x34\xb1\x84\x1e\x76\x6f\x9b\x2d\x87\xa1\x87\x6f\xa4\x3b\x76\xd4\x4c\x64\x38\xa0\x61\xdf\x00\x04\x9c\xa8\x87\x2d\xae\x30\x90\x4a\xeb\x3c\x37\x29\x92\x2b\xae\x44\x9e\x9c\x89\x96\x7f\x00\x8c\x71\x16\x07\x10\x45\x2d\x15\x77\x0b\x51\xc5\xc4\x89\xef\xe1\xe9\xf3\x43\x4d\x28\xce\x1e\xee\xef\xdf\xd5\x97\xa1\x8e\x64\x0f\xd5\xf6\xa1\x18\xdb\xb6\x6d\x5e\x52\xaa\x64\xa3\x4e\x22\x85\xb4\xe1\xb5\x75\x2c\x77\x7f\xc0\x1f\x8b\xef\x5a\x6c\x93\x3d\xf0\x69\xcf\xc5\xb2\x90\x04\x60\x3e\xed\xe3\x8d\x74\xe2\x80\x56\x69\x22\xa6\x64\x1b\x95\x3c\x6e\xce\x49\x57\xe8\x3a\xcc\xb6\x11\xe5\xe7\x1a\xdf\x6d\xdf\xa7\x19\xb0\x3f\xe5\x75\x4a\x35\xf2\x89\x27\x4a\x86\x53\xec\x21\x64\xef\x97\x3b\xd1\xec\x29\xf5\x4d\x0b\x18\xf9\x8b\x4a\x8e\x87\x19\xdf\xdc\x34\x00\x4a\x49\xb2\x3a\x3a\xce\x5d\x86\xd4\x00\xec\x48\x57\x07\xcb\x48\x56\xbf\x9e\xd3\xfe\xe7\x27\x9a\xdb\x5c\xa7\xe6\x24\xac\x79\x9c\x30\xa6\xfa\x4c\xfb\xe1\x5d\x28\x50\x7b\xa2\x73\x61\x8c\x35\x7d\x26\x3d\x50\xf4\xf2\x6b\xa2\x60\x7b\x6d\xa5\xe8\xd9\x61\x22\x5b\x90\x3f\xd3\x9c\x24\xb0\x89\x72\x18\x3b\x27\x4a\x92\x3a\x27\xd3\x79\x91\x03\xf0\x21\xfa\xff\xb8\xbf\xe2\x74\x94\x9d\xad\xcc\xe5\xce\xee\xd6\x1c\xd0\xf3\x33\xcd\x6b\xe7\x38\x2c\xd6\x3c\x2a\x77\x2c\xe7\xc2\xb7\x6f\x6e\x4f\x55\x8a\x61\xbe\x8d\xf3\xeb\xfe\xe8\x9c\xe4\x60\xaf\x5d\x4b\x91\xf9\xbb\xab\x9f\x38\x0c\x1c\xc6\xeb\xd7\xfc\xb5\x5b\xcc\xab\x1f\xe4\xac\x2e\xf1\x22\xdd\xf2\xde\x8b\xa7\x47\x5a\x17\xcd\x17\x67\x74\xe1\x6e\x8f\x83\xfc\x07\x68\xf3\x3b\x00\x00\xff\xff\x6f\x24\x8d\x56\x06\x05\x00\x00"),
		},
		"/orchestrations/landing": &vfsgen۰DirInfo{
			name:    "landing",
			modTime: time.Date(2019, 9, 16, 18, 53, 3, 426969143, time.UTC),
		},
		"/orchestrations/landing/0.1": &vfsgen۰DirInfo{
			name:    "0.1",
			modTime: time.Date(2019, 9, 25, 18, 54, 19, 529823783, time.UTC),
		},
		"/orchestrations/landing/0.1/kabanero-landing.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kabanero-landing.yaml",
			modTime:          time.Date(2019, 9, 25, 18, 54, 19, 529823783, time.UTC),
			uncompressedSize: 1215,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x41\x6f\xd4\x30\x10\x85\xef\xfe\x15\xa3\x5e\x2a\x21\x65\x2b\x44\x0f\x90\x1b\xf4\xc0\xb5\x5a\x10\xf7\x89\x77\x9a\x98\xf5\x7a\xac\x99\xf1\x22\xf1\xeb\x91\x9d\x2d\x6a\x49\xbb\x0a\x8b\x38\xd9\x99\x67\xcf\x7c\xef\xc5\x98\xc3\x37\x12\x0d\x9c\x7a\x38\xbe\x75\xfb\x90\x76\x3d\x7c\x21\x39\x06\x4f\xee\x40\x86\x3b\x34\xec\x1d\x40\xc2\x03\xf5\xb0\xc7\x01\x13\x09\x77\x11\xd3\x2e\xa4\xd1\x69\x26\x5f\x65\xa5\x48\xde\x58\xea\x1e\x00\x73\x7e\xe1\x2c\x40\x66\x31\xad\x47\x3a\xc8\xc2\xc6\x9e\x63\x0f\x5f\xef\xee\xdb\xa5\x2a\xf6\x70\x7b\xfb\xae\x7d\x19\xca\x48\x76\xdf\x6a\x1f\x6a\xb1\xeb\x3a\xf7\x94\x56\xb8\x18\x6d\x38\x53\xd2\x29\x3c\xd8\x26\xf0\xcd\x6f\x03\xdb\xaa\xfd\x0d\xbe\xf1\x0c\xfe\xdc\x7f\xad\xbc\x72\x11\xc0\xa2\xce\x77\x8c\xe4\x10\x12\x5a\xa3\xca\xa8\x6a\x93\x70\x19\xa7\x05\xf1\x9f\xf9\x7e\xf4\x9e\x4b\xb2\x35\x9c\x0b\xf3\x03\xfa\x0d\x16\x9b\x58\xc2\xcf\x36\x7a\xb3\x7f\xaf\xcf\x32\xb8\x8b\x45\x8d\x64\xcb\x91\x3e\x85\xb9\xcb\x9a\x40\xca\xf0\x9d\x7c\xfd\x49\x1d\xbc\x08\x7b\x26\x91\x2a\x68\x46\xff\x44\x75\xc2\x91\xb6\xf4\x50\x27\x2e\xb0\xce\xf5\xc2\x1c\x3e\x0b\x97\x7c\xc6\xea\x3f\x86\xb2\x26\x8d\x57\x3c\x95\x48\x2d\xa0\x47\xc8\xd3\x93\xbe\xba\x6a\xcb\xf2\x61\x56\x3f\x66\x12\x86\x62\xb4\x25\x35\x09\xbe\xd2\x69\x0f\xa9\xc4\xe8\x00\x84\x94\x8b\x78\x3a\x35\x6a\x1d\xd4\x01\x1c\x49\x86\x53\x6d\x24\x6b\x6b\x0c\x3a\x6f\x7e\xa0\xf9\xe9\xbf\x43\xdc\xa8\xa1\x95\x0b\x59\x1e\x13\xbb\x60\xfa\xf5\x9b\xeb\x35\x33\x7f\x05\x00\x00\xff\xff\xb8\xf8\x68\xeb\xbf\x04\x00\x00"),
		},
		"/reconciler": &vfsgen۰DirInfo{
			name:    "reconciler",
			modTime: time.Date(2019, 9, 30, 17, 10, 31, 229079128, time.UTC),
		},
		"/samples": &vfsgen۰DirInfo{
			name:    "samples",
			modTime: time.Date(2019, 9, 30, 17, 10, 31, 230079123, time.UTC),
		},
		"/samples/collection.yaml": &vfsgen۰FileInfo{
			name:    "collection.yaml",
			modTime: time.Date(2019, 8, 22, 2, 24, 18, 946459812, time.UTC),
			content: []byte("\x61\x70\x69\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x2e\x69\x6f\x2f\x76\x31\x61\x6c\x70\x68\x61\x31\x0a\x6b\x69\x6e\x64\x3a\x20\x43\x6f\x6c\x6c\x65\x63\x74\x69\x6f\x6e\x0a\x6d\x65\x74\x61\x64\x61\x74\x61\x3a\x0a\x20\x20\x6e\x61\x6d\x65\x3a\x20\x6a\x61\x76\x61\x2d\x6d\x69\x63\x72\x6f\x70\x72\x6f\x66\x69\x6c\x65\x0a\x73\x70\x65\x63\x3a\x0a\x20\x20\x76\x65\x72\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x30\x2e\x32"),
		},
		"/samples/default.yaml": &vfsgen۰CompressedFileInfo{
			name:             "default.yaml",
			modTime:          time.Date(2019, 9, 26, 19, 5, 52, 568560847, time.UTC),
			uncompressedSize: 235,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x41\x6e\x03\x31\x08\x85\xe1\xbd\x4f\xc1\x05\x62\x3a\x5d\xfa\x0a\xdd\x77\x4f\x6c\xd4\x41\xc1\x60\xd9\x24\x6d\x6f\x5f\xa9\xca\x28\xb3\xfd\xd1\xc7\xa3\x21\x9f\x3c\x97\xb8\x15\xb8\xd1\x95\x8c\xa7\x67\x71\x7c\x6c\xa4\x63\xa7\x2d\xdd\xc4\x5a\x81\x8f\xe7\x29\x75\x0e\x6a\x14\x54\x12\x80\x51\xe7\x97\x4a\x6b\x70\x2d\x29\x01\x54\x57\xe5\x1a\xe2\xb6\x0a\x24\x00\x80\xc9\xc3\x97\x84\x4f\xe1\x23\x5d\x9e\xbc\xb2\xc5\x24\xfd\x6f\x00\xf7\xa9\x05\xf6\x88\xb1\x0a\xe2\x97\xc4\x7e\xbf\xe6\xea\x1d\x8f\x91\x8b\x38\x9e\xde\xe3\x64\x65\x5a\xbc\xb0\xf9\xb7\xa9\x53\xc3\xc7\x5b\xde\xf2\xfb\x09\x58\xe3\x9f\xfc\x4b\x5d\xff\x02\x00\x00\xff\xff\xea\xc4\xe5\xca\xeb\x00\x00\x00"),
		},
		"/samples/full.yaml": &vfsgen۰CompressedFileInfo{
			name:             "full.yaml",
			modTime:          time.Date(2019, 9, 30, 17, 8, 37, 910602834, time.UTC),
			uncompressedSize: 2272,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xdb\x46\x0c\xbd\xeb\x57\x10\xd9\x4b\x03\xd4\x76\xb6\x47\xdd\x16\x69\x90\x06\x4d\x3f\xd0\x6e\x7a\xa7\x66\x68\x8b\xd8\x99\xa1\x30\xa4\xec\xb8\xbf\xbe\x98\x91\x64\xcb\xbb\x69\x91\x02\xb9\xad\x35\xc3\xc7\xc7\xc7\x47\xce\xde\xc1\x63\xcf\x0a\xf4\x19\xe3\x10\x08\x3c\x45\x49\x6a\x19\x8d\x14\x30\x04\x90\x3d\x58\x4f\x30\x88\x2a\x77\x81\xc0\x49\xda\xf3\x61\xcc\x68\x2c\x09\x28\x50\xa4\x64\xda\xdc\x35\x77\xf0\xab\x18\x81\xf5\x68\xa0\x12\x69\x89\x44\xb3\xcc\xdd\x58\xf0\x22\x9e\x21\x89\x41\xc4\x27\x02\xa5\xa4\x04\x9c\xc0\x49\xec\x38\x4d\x78\x27\xb6\x1e\xc4\x7a\xca\xab\xb8\xe6\x0e\x30\xf9\x09\xd9\x0a\x59\x9d\xb8\x46\x3e\xf4\x56\x01\x3b\x82\x3c\x26\x2c\xfc\x50\x37\xac\x0d\x0e\xfc\x17\x65\x65\x49\x2d\x3c\x61\x87\x89\xb2\x6c\x59\x76\xc7\x7b\x0c\x43\x8f\xf7\xcd\x13\x27\xdf\xc2\xcf\xf3\x51\x13\xc9\xd0\xa3\x61\xdb\x00\x24\x8c\x74\x8d\x6a\x74\x20\x57\x3e\x17\xa1\x08\x86\x80\xb6\x97\x1c\xe1\x38\xc1\x83\x27\xa3\x1c\x39\x91\xd6\x6a\x3d\x29\x67\xf2\x97\xe3\xbd\xe4\x2a\xa3\x93\x38\x48\x2a\x52\x7d\x0f\xdd\x58\xea\x10\xa5\x8a\xea\x30\x15\xfe\x72\xa4\x9c\xd9\x53\x02\x4e\x9e\x8f\xec\x47\x0c\xe1\x0c\xa8\x70\xa2\x10\x1a\x58\x10\x5b\x78\xf5\x66\x7b\xbf\xfd\xe1\x55\xd3\x00\xe0\x30\xa8\xf8\xf3\x46\x06\xca\x68\x92\x0b\xcf\x82\xf9\xdb\x0c\x36\x71\xba\x70\x3e\xb1\x2f\xba\x9b\x71\x3a\x68\xa5\xb6\xd0\x94\x34\x29\x7b\xa1\x59\x81\x6e\x53\xde\xd7\x94\x2f\xe1\x39\xe2\xa1\xe8\x0e\x08\x4a\x03\x16\xeb\x40\xa6\x41\x94\x4d\xf2\x19\x24\x83\xe1\xa1\x46\x5e\xbf\xb6\x0b\xf5\xdd\xf3\x12\xea\x45\xc3\xc3\x9c\xf4\xcd\x7f\x26\x1d\x33\xd7\xd3\xfa\xeb\xdf\x31\xdb\x8a\x54\x80\x5c\xe0\x3f\x29\x1f\xd9\x91\x7e\x59\xab\x59\x9d\xff\x2f\xce\x26\xbb\x6f\xac\xd0\xe2\xc0\xdd\xf2\xc7\xc6\x49\x8c\x98\xfc\x26\x70\xa2\x8d\xce\x75\x3c\x13\xec\x2b\x88\x3c\x53\xed\x2b\xf3\xb4\x57\xf4\x02\x1e\x30\x79\x4e\x87\x45\xc5\x32\x1b\xf3\x27\x18\x4a\x92\xb2\x53\xea\x44\x7a\xe8\xce\xe0\x69\x8f\x63\xb0\x2d\x3c\x0a\x78\xd6\x3a\xa9\x65\xb0\x78\x7f\x86\x3d\x06\xa5\x6d\xc5\x99\x22\x5a\xb0\x3c\x12\xd4\x7e\x49\x08\xe4\xca\x6a\xd0\x16\xe6\x54\x0f\x10\x58\x6d\x5a\x2f\xa2\x2b\x25\x99\x14\x4e\x3d\xbb\x1e\x30\x97\x4e\x62\x76\x3d\xf9\xda\xca\x15\xce\xad\xce\x4c\x0b\xf0\x66\x1e\x7c\x4e\x6e\xec\x2e\x4e\x04\x18\x73\x68\xa1\x37\x1b\xb4\xdd\xed\x0e\x6c\xfd\xd8\x6d\x9d\xc4\xab\x5a\x2c\xbb\x15\xfc\x2e\x53\x20\x54\xd2\x9d\x97\x53\x0a\x82\x7e\x77\xac\x03\xbb\x0a\x48\x9e\x3e\x6f\xcf\x18\xc3\x9c\xe2\x0e\x1e\x9c\xf1\x71\xda\xb9\x8b\x56\xc5\x8a\xa5\xc8\xe7\xd4\x01\x70\xbe\xfc\xe3\x74\xf1\xed\x5a\xa3\xa2\xdc\x65\x59\x71\x2a\x63\x3f\x6d\x56\x4e\xd5\x01\xef\x6b\x01\xa0\x53\x40\xe9\xd2\xa8\x53\x8b\xca\xe9\xb2\x0f\xe1\xed\xc7\x0f\x60\x52\x81\x06\xca\x75\x79\x8c\x4a\x19\x4c\x20\x4b\x59\xbd\x38\x0c\xa5\xd5\xa7\x9e\x12\xa0\x73\xa4\x5a\x7e\x16\x8c\x2b\xdf\xd2\xd3\x49\xb0\xb5\x4b\x1e\x7e\xff\x00\x9f\xfe\xf8\x08\x99\xf6\x94\xb5\x20\xae\x78\x71\x52\xc3\xe4\x08\xbe\x93\x0c\xef\x7f\x7a\x77\xf9\xf0\xba\xae\xff\x19\xc6\x49\x32\xe4\x34\x79\x5a\xf2\x01\x13\xff\x3d\xbf\x1f\x3d\x65\x7a\x46\x03\x4e\xa8\xe0\x82\x24\xf2\x5b\x28\x14\x66\x94\x52\xe3\x89\x43\x28\x95\x4d\x03\x5e\x68\x99\x00\x27\xa3\x8c\xce\xa6\xd7\x68\x66\x36\x13\x7a\x3d\x19\x15\x07\xfe\xb4\xf6\x05\x0e\xbc\xbd\x7a\x63\x55\xed\x1c\x7d\x43\xf2\x86\xfe\x6a\x0f\x5c\xc8\x5f\xca\xfc\x52\x09\xf5\x70\x8d\x77\x9d\xe0\x0d\xcb\x7a\x1c\x97\x29\x21\x8c\xcb\x60\x68\x2f\x63\xf0\xd0\xe3\x91\x00\x7d\xe4\x04\x38\x5a\x2f\x99\xed\x3c\x77\xe2\x45\xee\x2d\xc0\x3b\x74\x7d\x85\x81\x38\x6a\x7d\x6d\x3d\xed\x39\x91\xbf\x75\xd5\x1c\xba\xe6\xb6\x05\xf8\x85\x62\x57\x1a\x3d\xff\x3b\x30\xb3\x29\xba\x77\x04\x75\x11\x98\x40\x90\x43\x81\x5a\x33\xb8\xf1\x62\x79\xff\x2b\x5f\x56\x2b\x36\x7c\xe1\x33\x98\x80\xdb\x79\x94\xeb\xdd\x47\xc2\xd8\xfc\x13\x00\x00\xff\xff\xf1\x3f\x05\x95\xe0\x08\x00\x00"),
		},
		"/samples/override_software_versions.yaml": &vfsgen۰CompressedFileInfo{
			name:             "override_software_versions.yaml",
			modTime:          time.Date(2019, 9, 16, 18, 53, 3, 427969138, time.UTC),
			uncompressedSize: 1243,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x93\x31\x6f\xc2\x30\x10\x85\x77\xff\x8a\x13\x5d\x9b\x40\xe8\x96\xad\x73\x07\x96\xaa\x9d\x2f\xf8\x44\x4e\x38\x67\xcb\x39\x82\xf2\xef\xab\x38\x09\x30\x94\x42\x25\x2a\x75\x8a\xe4\x3c\xbf\xbb\xef\xe9\x19\x03\x7f\x50\x6c\xd9\x4b\x09\x7b\xac\x50\x28\xfa\x9c\xfd\xb2\x2b\xd0\x85\x1a\x0b\xb3\x67\xb1\x25\xbc\x4d\xbf\x4c\x43\x8a\x16\x15\x4b\x03\x20\xd8\xd0\xf9\x56\x61\xda\x40\xdb\xe1\xbc\x9b\x0d\x57\x79\x91\xaf\x0c\x80\x01\xc0\x10\x5a\x6f\xfb\x4d\xa0\x88\xea\xe3\x20\x03\x78\x82\x4d\x47\x31\xb2\xa5\x16\xb4\x26\x60\x51\x8a\x82\xce\xf5\x60\x49\x29\x36\x2c\x64\xe1\x75\xbc\x3a\xdb\xc2\x91\xb5\x4e\xf2\x10\x7d\xc7\x96\x2c\x74\xe8\x0e\x94\x1c\x4f\xa3\x17\x69\xf6\xc2\x64\x59\x66\xfe\x82\xf1\x01\x3c\xdc\xe0\x8e\x7e\xa4\x49\x8a\x72\x9e\xb5\x9c\xbe\x99\x9f\x87\x8e\xf9\x3e\x16\x71\x7d\x3f\xa2\x17\xd7\xa7\xd5\x23\x05\xdf\xb2\xfa\xd8\xc3\xa1\x25\x0b\xd5\x78\x3c\x19\xc0\xbc\x6f\x3e\x39\xbc\xd7\x04\x8a\x3b\x38\xb2\x73\x50\x5d\x89\x29\x69\xcf\xc6\xd7\x53\xf8\x07\xfc\x03\x4c\x02\x67\xf9\x16\x1c\x2c\x05\xe7\xfb\x86\x44\x2f\x22\xb8\x48\xed\x76\x12\x8a\xbb\xa9\xd4\xeb\x47\x97\xfa\xe5\x16\xf1\x67\x4d\x02\x95\xd7\x7a\xaa\x2c\x8a\xbd\x5c\xde\x9f\x02\xc1\x38\xd4\x98\x5a\x12\x7d\x1e\x1f\xc0\xa8\x57\x8d\x5c\x1d\x94\x26\xbf\x44\xab\xb8\x4f\xe2\x2d\x59\x92\xed\x6f\xfa\x7e\x6f\x31\xbe\x02\x00\x00\xff\xff\x69\x23\x65\x0a\xdb\x04\x00\x00"),
		},
		"/samples/simple.yaml": &vfsgen۰FileInfo{
			name:    "simple.yaml",
			modTime: time.Date(2019, 7, 30, 17, 44, 17, 334534490, time.UTC),
			content: []byte("\x61\x70\x69\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x2e\x69\x6f\x2f\x76\x31\x61\x6c\x70\x68\x61\x31\x0a\x6b\x69\x6e\x64\x3a\x20\x4b\x61\x62\x61\x6e\x65\x72\x6f\x0a\x6d\x65\x74\x61\x64\x61\x74\x61\x3a\x0a\x20\x20\x6e\x61\x6d\x65\x3a\x20\x6b\x61\x62\x61\x6e\x65\x72\x6f\x0a\x73\x70\x65\x63\x3a\x20\x7b\x7d\x0a"),
		},
		"/versions.yaml": &vfsgen۰CompressedFileInfo{
			name:             "versions.yaml",
			modTime:          time.Date(2019, 9, 27, 18, 6, 19, 449100838, time.UTC),
			uncompressedSize: 2123,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\xc1\x6e\xdb\x30\x0c\x86\xef\x7a\x0a\xc2\xb9\xd6\x69\x9a\xdd\xfc\x0a\xc3\xb6\x4b\x81\x9d\x15\x89\xae\x89\xc9\xa2\x26\xca\x09\xf2\xf6\x83\x6c\xcb\x89\xd3\x00\x2b\x0a\xb4\xbd\x05\xa2\xf8\xff\x1f\x7f\xd1\xd9\xc0\x0f\x1d\x04\xbe\xeb\x83\xf6\x18\x19\x82\xd3\xa9\xe5\xd8\xc3\x11\xa3\x10\x7b\x48\x0c\x11\x9d\x4e\x68\xc1\x70\x1f\xd8\xa3\x4f\xa5\x28\x6a\x03\x83\xb7\x18\x25\x31\x5b\x38\x9c\x21\x75\x08\x9c\x3a\x8c\xc0\x01\xa3\x4e\x1c\x65\x0b\x4a\x6d\xe0\x27\x27\x1c\xab\x2d\x3b\xc7\x27\xf2\x2f\x20\xf8\x77\x40\x6f\xb0\x19\xcf\x17\x82\xd2\x08\x07\x34\xdc\xa3\x80\x3e\xe9\x88\x6a\x03\xdc\x82\x06\x8f\xa7\x05\x8d\xdb\x75\x67\x61\x7f\x00\xf2\x10\x74\x4c\x99\x08\x2d\xa5\xec\x96\x3a\x12\x68\xc9\x65\xa5\x5f\xde\x4c\x30\x0b\x24\xe8\x88\x10\xd9\x39\xb4\xc0\x43\x7a\x18\xab\xda\xf6\xe4\x49\xd2\x84\x63\xb4\x07\xd3\x31\x0b\xe6\x4c\x06\xc9\x42\xf9\x56\x26\x5a\x10\x0a\xda\xca\xf8\x0a\x31\xa2\xf0\x10\x0d\x6e\xe1\x39\xf3\x18\x3d\x08\xe6\x14\xa7\xcc\x4a\x55\xb2\xc3\x01\x61\x08\x76\x0c\x7e\x90\x65\x82\x5e\x87\x40\xfe\x25\x47\xfa\xbb\x43\xbf\x56\x27\x2f\x49\xe7\xd9\x2c\xa3\x80\xe7\x04\x12\xd0\x50\x7b\x86\x53\x47\xa6\xbb\x0e\x6e\xe9\x99\x66\x79\x18\x87\x21\x01\x92\x51\xf2\xa8\xdd\x80\xca\x62\xab\x07\x97\x1a\xa8\x76\xdb\xa7\xed\xbe\xca\xae\xcf\x1c\xc0\xe1\x11\x5d\x33\xef\x85\xbc\x9a\x7e\xc4\x17\x6e\x53\x7e\xb8\xcb\xae\xfc\x99\xaf\x35\xaa\x2e\x87\xb3\xf2\x53\xa5\xa0\x6c\x59\x5d\xee\x37\xa0\x00\x00\x74\x08\xc2\xf6\x5c\x97\xa7\x9a\x5b\x76\xd5\x58\x35\x8e\x6a\xc1\x78\x24\x83\xb2\xae\x38\xed\x2d\xf9\x97\xcb\xe1\xad\xe9\xfe\x2b\x4c\xbf\x7d\xbe\xe9\x7e\xba\xf7\x81\xa6\xa3\x83\x2a\x06\xe5\xe1\x1b\x75\x47\x5d\x01\xdc\x46\x32\x0b\x72\x34\x1d\x8e\xdf\xda\x44\x57\xad\x0f\x1e\x6f\xa5\x1e\x77\xd3\xda\x00\x90\x45\x9f\xa8\x25\x8c\xd2\x8c\x07\x79\xd8\xc0\x42\x89\xe3\xb9\x81\x6a\xee\xcc\x0a\x8e\xcc\x28\xb7\xa8\x54\x73\x43\xd2\x57\xf9\xa9\xcb\x78\xef\xe7\x9d\x15\xde\x8e\x59\x3e\x8f\xd2\x79\x17\xed\x16\x67\xff\x65\x38\xfb\x39\xa9\xd5\x8a\xdc\x89\xeb\xa9\x8e\xa6\x78\xfe\x0f\xf2\x5a\xeb\x1d\xa4\xe5\x47\x6d\xb8\xef\xb5\xb7\xb5\x23\x8f\x8b\xe0\xeb\x3c\x2f\x68\x77\xff\x90\x3e\x9a\xb7\xa6\x6b\x64\x47\x6f\x7a\xf0\x37\xef\xdf\x27\x67\xb9\xab\xd4\xbf\x00\x00\x00\xff\xff\x24\x78\x46\x8c\x4b\x08\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations"].(os.FileInfo),
		fs["/reconciler"].(os.FileInfo),
		fs["/samples"].(os.FileInfo),
		fs["/versions.yaml"].(os.FileInfo),
	}
	fs["/orchestrations"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator"].(os.FileInfo),
		fs["/orchestrations/cli-services"].(os.FileInfo),
		fs["/orchestrations/landing"].(os.FileInfo),
	}
	fs["/orchestrations/appsody-operator"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/appsody-operator/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/appsody-operator/0.1/appsody.yaml"].(os.FileInfo),
	}
	fs["/orchestrations/cli-services"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/cli-services/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/cli-services/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/cli-services/0.1/kabanero-cli.yaml"].(os.FileInfo),
	}
	fs["/orchestrations/landing"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/landing/0.1"].(os.FileInfo),
	}
	fs["/orchestrations/landing/0.1"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/orchestrations/landing/0.1/kabanero-landing.yaml"].(os.FileInfo),
	}
	fs["/samples"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/samples/collection.yaml"].(os.FileInfo),
		fs["/samples/default.yaml"].(os.FileInfo),
		fs["/samples/full.yaml"].(os.FileInfo),
		fs["/samples/override_software_versions.yaml"].(os.FileInfo),
		fs["/samples/simple.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
